% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Penalty_estimate.R
\name{estimate.plvm}
\alias{estimate.plvm}
\title{Estimate a penalized lvm model}
\usage{
\method{estimate}{plvm}(x, data, lambda1, lambda2, lambdaN, adaptive = FALSE,
  control = list(), estimator = "penalized", regularizationPath = FALSE,
  resolution_lambda1 = c(0.1, 0.001), increasing = TRUE,
  reversible = FALSE, stopLambda = NULL, stopParam = NULL,
  exportAllPath = FALSE, fit = "BIC", method.proxGrad = "ISTA",
  step = 1, BT.n = 100, BT.eta = 0.8, force.descent = FALSE,
  fixSigma = FALSE, ...)
}
\arguments{
\item{x}{a penalized lvm model}

\item{data}{a data.frame containing the data}

\item{lambda1}{L1 penalization parameter}

\item{lambda2}{L2 penalization parameter}

\item{lambdaN}{Nuclear norm penalization parameter}

\item{regularizationPath}{the algorithm used to compute the regularization path. 
0 indicates to estimate the solution for a given lambda
1 corresponds to the algorithm proposed by (Park 2007) - called GLMpath.  Only works for regression models.  
2 corresponds to the algorithm proposed by (Zhou 2014) - called EPSODE. 
If regularizationPath>0, the argument lambda1 is ignored but not lambda2}

\item{resolution_lambda1}{argument for the EPSODE function (see Penalty_EPSODE.R)}

\item{method.proxGrad}{argument for the proxGrad function (see Penalty_optims.R)}

\item{step}{argument for the proxGrad function (see Penalty_optims.R)}

\item{BT.n}{argument for the proxGrad function (see Penalty_optims.R)}

\item{fixSigma}{should the variance parameter be fixed at 1 ? Only works for regression models. [temporary]}

\item{...}{additional arguments to be passed to lava:::estimate.lvm}
}
\value{
a plvmfit object
}
\details{

}
\examples{
set.seed(10)
n <- 300
formula.lvm <- as.formula(paste0("Y~",paste(paste0("X",1:4), collapse = "+")))
lvm.modelSim <- lvm(formula.lvm)
df.data <- sim(lvm.modelSim,n)

lvm.model <- lvm(formula.lvm)
plvm.model <- penalize(lvm.model)

#### unpenalized
lvm.fit <- estimate(lvm.model, df.data)

#### L1 penalisation

## regularization path
rp1lvm.fit <- estimate(plvm.model,  data = df.data, regularizationPath = 1)
rp1lvm.fit

EPSODE1lvm.fit <- estimate(plvm.model,  data = df.data, regularizationPath = 2)
EPSODE1lvm.fit

## 
p1lvm.fit <- estimate(plvm.model,  data = df.data, lambda1 = 0.1)
p1lvm.fit

p1lvm.fit_bis <- estimate(plvm.model,  data = df.data, lambda1 = rp1lvm.fit$opt$message[2,"lambda1.abs"])
p1lvm.fit_bis

#### L2 penalisation
p2lvm.fit <- estimate(plvm.model,  data = df.data, lambda2 = 0.1)
p2lvm.fit

#### elastic net
rp12lvm.fit <- estimate(plvm.model,  data = df.data, regularizationPath = 1, lambda2 = 5, fixSigma = TRUE)
rp12lvm.fit

p12lvm.fit <- estimate(plvm.model,  data = df.data, lambda1 = 0.1, lambda2 = 0.1)
p12lvm.fit
}
\references{
Zhou 2014 - A generic Path Algorithm for Regularized Statistical Estimation
Park 2007 - L1-regularization path algorithm for GLM
}

