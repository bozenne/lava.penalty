% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Penalty_initializer.R
\name{initializer}
\alias{initializer}
\alias{initializer.penaltyL12}
\alias{initializer.penaltyNuclear}
\alias{initializer.plvm}
\title{Intialization of the parameter of the plvm}
\usage{
initializer.plvm(x, data, regularizationPath, constrain.variance, name.variance,
  ...)

initializer.penaltyL12(x, name.coef)

initializer.penaltyNuclear(x, name.coef)
}
\arguments{
\item{x}{a penalized lvm model}

\item{data}{a data.frame containing the data}

\item{name.coef}{the name of the parameters}
}
\description{
Compute the coefficients of the non and the completely regularized latent variable model.
Also prepare the penalty.
}
\examples{
m <- lvm()
regression(m) <- y1~x1+x2+x3+x4

#### elastic net
e <- estimate(m, sim(m, 1e2))
pm <- penalize(m, lambda1 = 2, lambda2 = 1.5)#' 
pen12 <- initializer.penaltyL12(pm$penalty, name.coef = names(coef(e)))
pen12

i <- initializer.plvm(pm, data = sim(m, 1e2),
                 regularizationPath = FALSE, constrain.variance = FALSE)

#### group lasso
categorical(m, labels = c("A","B","C")) <- "x1"
categorical(m, labels = c("A","B","C")) <- "x2"

e <- estimate(m, sim(m, 1e2))
pm <- penalize(m, lambdaG = 5)
pen12 <- initializer.penaltyL12(pm$penalty, name.coef = names(coef(e)))
pen12
estimate(pm, data = sim(pm, 1e2))

i <- initializer.plvm(pm, data = sim(m, 1e2),
                 regularizationPath = FALSE, constrain.variance = FALSE)

# nuclear norm
m <- lvm()
coords <- expand.grid(x = 1:10, y = 1:10)
m <- regression(m, y = "y1", x = paste0("z",1:100))

mNuclear <- lvm(y1 ~ x1 + x2)
penalizeNuclear.penaltyL12(mNuclear, coords = coords, lambdaN = 10) <- coefReg(m, value = TRUE)
mNuclear

penN <- initializer.plvm(mNuclear$penaltyNuclear, name.coef = coef(mNuclear))
penN

}

