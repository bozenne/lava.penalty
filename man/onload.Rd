% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Penalty_onload.R
\name{onload}
\alias{onload}
\alias{.onLoad}
\alias{.onAttach}
\title{Default Options for lavaPenalty}
\usage{
.onLoad(lib, pkg = "lavaPenalty")

.onAttach(lib, pkg = "lavaPenalty")
}
\description{
Default options for lavaPenalty.
}
\details{
Add the following elements to \code{lava.options}:
\itemize{
item iter.max maximum number of iterations
item trace should the convergence diagnostics be displayed at each step
item abs.tol convergence is the difference in likelihood between two consecutive steps is below this threshold
item rel.tol convergence is the relative difference  in likelihood between two consecutive steps is below this threshold
item step maximun step for the proximal gradient algorithm. 
If NULL the step is estimated using the inverse of the maximal eigenvalue of the hessian (in absolute value) and re-estimated at each step
Otherwise backtracking is used.
item BT.n number of backtracking steps
item BT.eta multiplicative factor for the step 
item force.descent 
item export.iter should all iterations be exported (details.cv)
item method type of iteration
ISTA correspond to the ISTA step as described in Bech 2009
FISTA_Beck correspond to the FISTA step as described in Bech 2009
FISTA_Vand correspond to ??
mFISTA_Vand correspond to ??
item resolution_lambda1 the first value is the maximum relative difference in parameter between two steps. 
If this lead to a too small step, the second value is used as the minimum change in penalization parameter between two steps.
item increasing direction of the path
item stopLambda if not null, stop the path when the penalty parameter reach this value
item stopParam if not null, stop the path when the number of 0 (if increasing = TRUE) or non 0 (if increasing = FALSE) parameters has reached this value.
item nstep_max the maximum number of iterations
item ode.method the type of method to use to solve the ode (see the documentation of deSolve:::ode)
item constrain the constrain on the variance parameters
item reversible should the algorithm allow a 0 parameter to become non-0 (when increasing = TRUE) or non-0 parameter to become 0 (when increasing = FALSE)
item tol.0 tolerance for classify a parameter from beta_lambdaMax in the set of 0 parameters
item exportAllPath export all the regularization path (and not only the breakpoints)
item trace should the function be traced
}
}
