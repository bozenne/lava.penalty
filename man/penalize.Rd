% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Penalty_penalize.R
\name{penalize}
\alias{penalize}
\alias{penalize.lvm}
\alias{penalize<-}
\alias{penalize<-.lvm}
\alias{penalizeNuclear}
\alias{penalizeNuclear.lvm}
\alias{penalizeNuclear<-}
\alias{penalizeNuclear<-.lvm}
\title{Penalize a latent variable model}
\usage{
penalize(x, ...)

penalize(x, ...) <- value

\method{penalize}{lvm}(x, value = NULL, ...)

\method{penalize}{lvm}(x, group, V, add = TRUE, reduce = FALSE, lambda1,
  lambda2, lambdaG, lambdaN, adaptive, intercept = FALSE, regression = TRUE,
  variance = FALSE, covariance = FALSE, latent = FALSE) <- value

penalizeNuclear(x, ...)

penalizeNuclear(x, ...) <- value

\method{penalizeNuclear}{lvm}(x, value = NULL, ...)

\method{penalizeNuclear}{lvm}(x, coords = NULL, lambdaN = NULL, ...) <-
  value
}
\arguments{
\item{x}{\code{lvm}-object}

\item{value}{the name of the link to be penalized}

\item{group}{the groups defining the group lasso penalty}

\item{V}{the matrix defining lasso penalties}

\item{add}{should value be added to the existing penalty term ? Otherwise it will overwrite it.}

\item{reduce}{should for each regression the penalised link be aggregated into a linear predictor.}

\item{lambda1}{lasso penalization parameter}

\item{lambda2}{ridge penalization parameter}

\item{lambdaG}{group lasso penalization parameter}

\item{lambdaN}{nuclear norm penalization parameter}

\item{adaptive}{should an adaptive lasso be used?}

\item{intercept}{should all intercept be penalized. Disregarded if value is specified.}

\item{regression}{should all regression parameters be penalized. Disregarded if value is specified.}

\item{variance}{should all covariance links be penalized. Disregarded if value is specified.}

\item{latent}{If FALSE, no link related to the latent variable will be penalized. Disregarded if value is specified.}
}
\description{
Add a penalty term to a latent variable model
}
\details{
By default categorical variables are penalised using a group lasso penalty.
penalize functions can be used to add lasso or/and ridge penalty terms to the model.
penaltyNuclear functions can be used to add a nuclear penalty to the model.
}
\examples{

#### lasso penalty ####
set.seed(10)
n <- 500
formula.lvm <- as.formula(paste0("Y~",paste(paste0("X",1:5), collapse = "+")))
lvm.modelSim <- lvm()
regression(lvm.modelSim, formula.lvm) <- as.list( c(rep(0,2),1:3) )
distribution(lvm.modelSim, ~Y) <- normal.lvm(sd = 2)
df.data <- sim(lvm.modelSim,n)

lvm.model <- lvm(formula.lvm)
plvm.model <- penalize(lvm.model)

#### group penalty ####
m <- lvm(Y1 ~ X1+X2+X3+X4)
categorical(m, labels = c("A","B","C")) <- "X1"
categorical(m, labels = c("A","B","C")) <- "X2"

pm <- penalize(m, value = c("Y1~X1","Y1~X3","Y1~X4"))
pm$penalty
pm1 <- penalize(m, value = c("Y1~X1"))
pm1 <- penalize(pm1, value = c("Y1~X2","Y1~X3"))



m <- lvm(list(Y1 ~ X1+X2+X3+X4+eta, Y2 ~ X1+X2+X3+eta, Y3 ~ eta))
categorical(m, labels = c("A","B","C")) <- "X1"
latent(m) <- ~eta

penalize(m)

}

