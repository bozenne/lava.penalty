% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lava_modelsearchMax.R
\name{calcDistMax}
\alias{calcDistMax}
\title{Adjust the p.values using the quantiles of the max statistic}
\usage{
calcDistMax(statistic, iid, mu, conditional, method, alpha, ncpus, n.sim, trace,
  n.repMax = 100)
}
\arguments{
\item{statistic}{the observed statistic}

\item{iid}{zero-mean iid decomposition of the observed coefficients used to compute the statistic.}

\item{mu}{estimated value for the coefficients}

\item{conditional}{values to condition on. 
If not \code{NULL} the values should correspond the variable in to the first column(s) of the argument iid.}

\item{method}{the method used to compute the p.values. Can be \code{"integration"}, \code{"boot-wild"}, or \code{"boot-norm"}.
See the detail section.}

\item{alpha}{the significance threshold for retaining a new link}

\item{ncpus}{the number of cpu to use for parellel computations}

\item{n.sim}{the total number of simulations.}

\item{trace}{should the execution of the function be traced.}

\item{n.repMax}{the maximum number of rejection when using "\code{"boot-wild"} or \code{"boot-norm"}.}

\item{n}{}
}
\description{
Adjust the p.values using the quantiles of the max statistic.
}
\details{

}
\examples{

n <- 100
p <- 5
X.iid <- rmvnorm(n, mean = rep(0,p), sigma = diag(1,p))

calcDistMax(1:p, iid = X.iid, mu = rep(1,p), conditional =  NULL, method = "integration")

calcDistMax(1:p, iid = X.iid, mu = rep(1,p), conditional =  NULL, method = "boot-wild", ncpus = 4, n.sim = rep(1e3,4))

#### example
mSim <- lvm(Y~X1+X2+0.5*X3+0.1*X4+0*X5)
m <- lvm(Y~X1+X2+X3+X4+X5)
set.seed(10)
d <- sim(mSim, n)
d$Id <- 1:n
e <- estimate(m, data = d, robust = TRUE, cluster = "Id")
links <- names(coefType(e)[coefType(e)=="regression"])
e.mu <- coef(e)[links]
e.iid <- sqrt(n)*iid(e)[,links]
e.statistic <- e.mu/apply(e.iid,2,sd) # e.statistic-summary(e)$coef[links,1]/summary(e)$coef[links,2]

pGS <- summary(e)$coef[links,4]

pMax.integration <- calcDistMax(e.statistic, e.iid, e.mu, conditional = NULL, method = "integration")
pMax.bootstrap <- calcDistMax(e.statistic, e.iid, e.mu, conditional = NULL, method = "boot-wild", ncpus = 4, n.sim = rep(,4))

}
