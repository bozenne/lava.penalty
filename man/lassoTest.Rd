% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Penalty_lassoTest.R
\name{lassoTest}
\alias{lassoTest}
\alias{lassoTest.plvmfit}
\title{Significance test for the lasso}
\usage{
lassoTest(x, ...)

\method{lassoTest}{plvmfit}(x, ...)
}
\arguments{
\item{x}{a penalized latent variable model contain}
}
\description{
Significance test while performing variable selection with the lasso
}
\details{
It is essentially a copy of the \code{covTest} function of the covTest package.
}
\examples{
m <- lvm(Y ~ X1+X2+X3+X4+X5)

## simulation
set.seed(10)
mSim <- m
regression(mSim, Y~X1+X2+X3+X4+X5) <- list(1,0,0,0.1,0.5)
df <- sim(mSim,50)
dfs <- as.data.frame(scale(df))

## lvm
pm <- penalize(m)
res <- estimate(pm, data = dfs, regularizationPath = TRUE)
plot(res, type = "path")
getPath(res)
lassoTest(res)

penalized.PathL1 <- penalized(Y ~  ., data = dfs, steps = "Park", trace = FALSE)
seq_lambda <- unlist(lapply(penalized.PathL1, function(x){x@lambda1}))
n.lambda <- length(seq_lambda)

if(require(covTest)){
 m.lars <- lars(y = dfs[,1], x = as.matrix(dfs[,-1]), type = "lasso")
 a <- covTest(fitobj = m.lars, x = as.matrix(dfs[,-1]), y = dfs[,1])
 # covTestLasso(beta = m.lars$beta, lambda = m.lars$lambda, Y = dfs[,1], X = as.matrix(dfs[,-1]))
 # one difference with the LVM version is that p doesn't count the intercept
}


}
\references{
R. Lockhart, J. Taylor, R. J. Tibshirani and R. Tibshirani. A significance test for the lasso. Ann Stat. 2014 42(2):413-468
}

