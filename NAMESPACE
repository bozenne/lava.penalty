# Generated by roxygen2: do not edit by hand

S3method("penalize<-",lvm)
S3method(coef0,plvmfit)
S3method(coefCov,lvm)
S3method(coefVar,lvm)
S3method(cvCheck,lvm)
S3method(estimate,plvm)
S3method(extendModel,lvm)
S3method(getPath,plvmfit)
S3method(getPath,regPath)
S3method(loadings,lvm.missing)
S3method(loadings,lvmfit)
S3method(penalize,lvm)
S3method(penalize,plvm)
S3method(print,plvm)
S3method(print,plvmfit)
export("penalize<-")
export("penalizeNuclear<-")
export(calcLambda)
export(coef0)
export(coefCov)
export(coefVar)
export(explicit_gradient.lvm)
export(explicit_hessian.lvm)
export(explicit_logLik.lvm)
export(explicit_objective.lvm)
export(extendModel)
export(getPath)
export(hessianGaussian)
export(loadings)
export(lvGaussian)
export(lvm2plvm)
export(modelsearchLR)
export(numDeriveSimple_gradient.lvm)
export(numDeriveSimple_hessian.lvm)
export(numDeriveSimple_logLik.lvm)
export(numDeriveSimple_objective.lvm)
export(optim.regLL)
export(optim.regPath)
export(penalize)
export(penalizeNuclear)
export(penalized_gradient.lvm)
export(penalized_hessian.lvm)
export(penalized_logLik.lvm)
export(penalized_objective.lvm)
export(scoreGaussian)
import(data.table)
import(lava)
import(snowfall)
importFrom(abind,abind)
importFrom(deSolve,ode)
importFrom(numDeriv,hessian)
importFrom(numDeriv,jacobian)
importFrom(parallel,detectCores)
importFrom(pracma,nullspace)
importFrom(utils,setTxtProgressBar)
importFrom(utils,txtProgressBar)
